*minibufexpl.txt*    Mini Buffer Explorer

==============================================================================
CONTENTS                                                *MiniBufExpl-contents*
                                                        *MiniBufExpl*

    1. Install................................|MiniBufExplInstall|
    2. Key Mappings...........................|MiniBufExplKeymap|
    3. Commands...............................|MiniBufExplCommands|
    4. Options................................|MiniBufExplOptions|
       4.1 Splits.............................|MiniBufExplSplits|
       4.2 Horizontal Size....................|MiniBufExplWindowSize|
       4.3 Automatic Opening..................|MiniBufExplAutoOpen|
       4.4 Keyboard Control...................|MiniBufExplKeyboard|
       4.5 Misc...............................|MiniBufExplMisc|
       4.6 Debugging..........................|MiniBufExplDebugging|
    5. Highlighting...........................|MiniBufExplHighlighting|
    6. Known Issues...........................|MiniBufExplKnownIssues|
    7. About..................................|MiniBufExplAbout|
    8. Changelog..............................|MiniBufExplChangelog|

==============================================================================
1. Install                                                *MiniBufExplInstall*

Normally, this file should reside in the plugins directory and be
automatically sourced. If not, you must manually source this file using
':source minibufexplorer.vim'.

==============================================================================
2. Key Mappings                                          *MiniBufExplMappings*

You may use the default keymappings of

  <Leader>mbe - Opens MiniBufExplorer

or you may want to add something like the following key mapping to your
_vimrc/.vimrc file.

  map <Leader>b :MiniBufExplorer<cr>

However, in most cases you won't need any key-bindings at all.

<Leader> is usually backslash so type "\mbe" (quickly) to open the
-MiniBufExplorer- window.

Other keymappings include: <Leader>mbc to close the Explorer window,
<Leader>mbu to force the Explorer to Update and <Leader>mbt to toggle the
Explorer window; it will open if closed or close if open. Each of these key
bindings can be overridden (see the notes on <Leader>mbe above.)

==============================================================================
3. Commands                                              *MiniBufExplCommands*

You can map these additional commands as follows:

  map <Leader>c :CMiniBufExplorer<cr>
  map <Leader>u :UMiniBufExplorer<cr>
  map <Leader>t :TMiniBufExplorer<cr>

NOTE: you can change the key binding used in these mappings
so that they fit with your configuration of vim.

You can also call each of these features by typing the following in command
mode:

:MiniBufExplorer                                           *:MiniBufExplorer*
    Open and/or goto Explorer

:CMiniBufExplorer                                         *:CMiniBufExplorer*
    Close the Explorer if it's open

:UMiniBufExplorer                                         *:UMiniBufExplorer*
    Update Explorer without navigating

:TMiniBufExplorer                                         *:TMiniBufExplorer*
    Toggle the Explorer window open and closed.

==============================================================================
4. Options                                                *MiniBufExplOptions*

------------------------------------------------------------------------------
4.1 Splits                                                 *MiniBufExplSplits*

                                                   *'g:miniBufExplSplitBelow'*
To control where the new split window goes relative to the current window, use
the setting:

  let g:miniBufExplSplitBelow=0  " Put new window above
                                 " current or on the
                                 " left for vertical split
  let g:miniBufExplSplitBelow=1  " Put new window below
                                 " current or on the
                                 " right for vertical split

The default for this is read from the 'splitbelow' VIM option.

                                                  *'g:miniBufExplSplitToEdge'*
By default we are now (as of 6.0.2) forcing the -MiniBufExplorer- window to
open up at the edge of the screen. You can turn this off by setting the
following variable in your .vimrc:

  let g:miniBufExplSplitToEdge = 0

                                                       *'g:miniBufExplVSplit'*
If you would like a vertical explorer you can assign the column width (in
characters) you want for your explorer window with the following .vimrc
variable (this was introduced in 6.3.0):

  let g:miniBufExplVSplit = 20   " column width in chars


------------------------------------------------------------------------------
4.2 Window Size                                        *MiniBufExplWindowSize*

                                                      *'g:miniBufExplMaxSize'*
------------------------------------------------------------------------------
Horizontal

It is now (as of 6.1.1) possible to set a maximum height
for the -MiniBufExplorer- window. You can set the max height by letting the
following variable in your .vimrc:

  let g:miniBufExplMaxSize = <max lines: defualt 0>

setting this to 0 will mean the window gets as big as needed to fit all your
buffers.

------------------------------------------------------------------------------
Vertical

(as of 6.3.0)

By default the vertical explorer has a fixed width . If you put:

  let g:miniBufExplMaxSize = <max width: default 0> 

into your .vimrc then MBE will attempt to set the width of the MBE window to
be as wide as your widest tab. The width will not exceed MaxSize even if you
have wider tabs. 

Accepting the default value of 0 for this will give you a fixed width MBE
window.

NOTE: This was *'g:miniBufExplMaxHeight'* before 6.3.0; the old
setting is backwards compatible if you don't use MaxSize.

                                                      *'g:miniBufExplMinSize'*
------------------------------------------------------------------------------
Horizontal

As of 6.2.2 it is possible to set a minimum height for the -MiniBufExplorer-
window. You can set the min height by letting the following variable in your
.vimrc:

  let g:miniBufExplMinSize = <min height: default 1>

------------------------------------------------------------------------------
Vertical

You can specify a MinSize for the vertical explorer window by putting the
following in your .vimrc:

  let g:miniBufExplMinSize = <min width: default 1>

This will have no effect unless you also specify MaxSize.

NOTE: This was *'g:miniBufExplMinHeight'* before 6.3.0; the old
setting is backwards compatible if you don't use MinSize.

------------------------------------------------------------------------------
4.3 Automatic Opening                                    *MiniBufExplAutoOpen*

                                              *'g:miniBufExplorerMoreThanOne'*
By default we are now (as of 6.0.1) turning on the MoreThanOne option. This
stops the -MiniBufExplorer- from opening automatically until more than one
eligible buffer is available. You can turn this feature off by setting the
following variable in your .vimrc:
  
  let g:miniBufExplorerMoreThanOne=1

(The following enhancement is as of 6.2.2) Setting this to 0 will cause the
MBE window to be loaded even if no buffers are available. Setting it to 1
causes the MBE window to be loaded as soon as an eligible buffer is read. You
can also set it to larger numbers. So if you set it to 4 for example the MBE
window wouldn't auto-open until 4 eligibles buffers had been loaded. This is
nice for folks that don't want an MBE window unless they are editing more than
two or three buffers.

------------------------------------------------------------------------------
4.4 Keyboard Control                                     *MiniBufExplKeyboard*

                                              *'g:miniBufExplMapWindowNavVim'*
To enable the optional mapping of Control + Vim Direction Keys [hjkl] to
window movement commands, you can put the following into your .vimrc:

  let g:miniBufExplMapWindowNavVim = 1

                                           *'g:miniBufExplMapWindowNavArrows'*
To enable the optional mapping of Control + Arrow Keys to window movement
commands, you can put the following into your .vimrc:

  let g:miniBufExplMapWindowNavArrows = 1

                                            *'g:miniBufExplMapCTabSwitchBufs'*
To enable the optional mapping of <C-TAB> and <C-S-TAB> to a function that
will bring up the next or previous buffer in the current window, you can put
the following into your .vimrc:

  let g:miniBufExplMapCTabSwitchBufs = 1

                                         *'g:miniBufExplMapCTabSwitchWindows'*
To enable the optional mapping of <C-TAB> and <C-S-TAB> to mappings that will
move to the next and previous (respectively) window, you can put the following
into your .vimrc:

  let g:miniBufExplMapCTabSwitchWindows = 1


NOTE: If you set the ...TabSwitchBufs AND ...TabSwitchWindows, 
      ...TabSwitchBufs will be enabled and ...TabSwitchWindows 
      will not.

------------------------------------------------------------------------------
4.5 Misc                                                     *MiniBufExplMisc*

                                               *'g:miniBufExplUseSingleClick'*
As of MBE 6.3.0, you can put the following into your .vimrc:

  let g:miniBufExplUseSingleClick = 1

If you would like to single click on tabs rather than double clicking on them
to goto the selected buffer. 

NOTE: If you use the single click option in taglist.vim you may 
      need to get an updated version that includes a patch I 
      provided to allow both explorers to provide single click 
      buffer selection.

                                                 *'g:miniBufExplModSelTarget'*
If you use other explorers like TagList you can (As of 6.2.8) put:

  let g:miniBufExplModSelTarget = 1

                                                *'g:miniBufExplCloseOnSelect'*
If you would like MBE to close when you select a buffer, put:

  let g:miniBufExplCloseOnSelect = 1

into your .vimrc in order to force MBE to try to place selected buffers into a
window that does not have a nonmodifiable buffer. The upshot of this should be
that if you go into MBE and select a buffer, the buffer should not show up in
a window that is hosting an explorer.

                                                *'g:miniBufExplCheckDupeBufs'*
If you use Vim with many open buffers simultaneously (>15) and you notice that
switching buffers takes longer than usual, it is because of MBE's duplicate
buffer name checking feature. To turn it off, you can add the following to
your .vimrc:

    let g:miniBufExplCheckDupeBufs = 0

We are working on a fix so that we can all enjoy the feature if you want!

                                               *'g:miniBufExplShowBufNumbers'*
If you would like to omit the buffer number from MBE's buffer display, put the
following in your .vimrc:

    let g:miniBufExplShowBufNumbers = 0

                                            *'g:miniBufExplForceSyntaxEnable'*
There is a VIM bug that can cause buffers to show up without their
highlighting. The following setting will cause MBE to try and turn
highlighting back on (introduced in 6.3.1):

  let g:miniBufExplForceSyntaxEnable = 1

------------------------------------------------------------------------------
4.6 Debugging                                           *MiniBufExplDebugging*

                                               *'g:miniBufExplorerDebugLevel'*
MBE has had a basic debugging capability for quite some time. However, it has
not been very friendly in the past. As of 6.0.8, you can put one of each of
the following into your .vimrc:

  let g:miniBufExplorerDebugLevel = 0  " MBE serious errors output
  let g:miniBufExplorerDebugLevel = 4  " MBE all errors output
  let g:miniBufExplorerDebugLevel = 10 " MBE reports everything

                                               *'g:miniBufExplorerDebugMode'*
You can also set a DebugMode to cause output to be target as follows (default
is mode 3):

  let g:miniBufExplorerDebugMode  = 0  " Errors will show up in 
                                       " a vim window
  let g:miniBufExplorerDebugMode  = 1  " Uses VIM's echo function
                                       " to display on the screen
  let g:miniBufExplorerDebugMode  = 2  " Writes to a file
                                       " MiniBufExplorer.DBG
  let g:miniBufExplorerDebugMode  = 3  " Store output in global:
                                  " g:miniBufExplorerDebugOutput

Or if you are able to start VIM, you might just perform these at a command
prompt right before you do the operation that is failing.

==============================================================================
5. Highlighting                                      *MiniBufExplHighlighting*

It is possible to customize the the highlighting for the tabs in the MBE by
configuring the following highlighting groups:

  MBENormal               - for buffers that have NOT CHANGED and
                            are NOT VISIBLE.
  MBEChanged              - for buffers that HAVE CHANGED and are
                            NOT VISIBLE
  MBEVisibleNormal        - buffers that have NOT CHANGED and are
                            VISIBLE
  MBEVisibleActive        - buffers that have NOT CHANGED and are
                            VISIBLE and is the active buffer
  MBEVisibleChanged       - for buffers that have CHANGED and are 
                            VISIBLE
  MBEVisibleChangedActive - buffers that have CHANGED and are VISIBLE
                            and is the active buffer

You can either link to an existing highlighting group by adding a command
like:

  hi link MBEVisibleChanged Error

to your .vimrc or you can specify exact foreground and background colors using
the following syntax:

  hi MBEChanged guibg=darkblue ctermbg=darkblue termbg=white


NOTE: If you set a colorscheme in your .vimrc you should do it
      BEFORE updating the MBE highlighting groups.

==============================================================================
6. Known Issues                                       *MiniBufExplKnownIssues*

When debugging is turned on and set to output to a window, there
are some cases where the window is opened more than once, there
are other cases where an old debug window can be lost.

Several MBE commands can break the window history so <C-W>[pnw]
might not take you to the expected window.

==============================================================================
6. Todo                                                      *MiniBufExplTodo*

- Add context to tab titles so that multiple tabs show the
  root folder names. Useful for working with MVC frameworks
  where multiple files have the same name but are in different
  locations.
- Add the ability to specify a regexp for eligible buffers
  allowing the ability to filter out certain buffers that 
  you don't want to control from MBE.


==============================================================================
7. About                                                    *MiniBufExplAbout*

    Copyright: Copyright (C) 2002 & 2003 Bindu Wavell 
               Copyright (C) 2010 Oliver Uvman
               Copyright (C) 2010 Danielle Church
               Copyright (C) 2010 Stephan Sokolow
               Copyright (C) 2010 & 2011 Federico Holgado
               Permission is hereby granted to use and distribute this code,
               with or without modifications, provided that this copyright
               notice is copied with it. Like anything else that's free,
               minibufexpl.vim is provided *as is* and comes with no
               warranty of any kind, either expressed or implied. In no
               event will the copyright holder be liable for any damamges
               resulting from the use of this software.

  Description: Mini Buffer Explorer Vim Plugin
   Maintainer: Federico Holgado <fholgado@gmail.com>
 Last Updated: Federico Holgado <fholgado@gmail.com>
          URL: http://vim.sourceforge.net/scripts/script.php?script_id=159
   GitHub URL: https://github.com/fholgado/minibufexpl.vim
  Last Change: Sunday, February 26, 2012
      Version: 6.4.4
               Derived from Jeff Lanzarotta's bufexplorer.vim version 6.0.7
               Jeff can be reached at (jefflanzarotta@yahoo.com) and the
               original plugin can be found at:
               http://lanzarotta.tripod.com/vim/plugin/6/bufexplorer.vim.zip
               [NO LONGER AVAILABLE]


==============================================================================
8. Changelog                                            *MiniBufExplChangelog*


6.4.4
    - Set up proper documentation. Thanks to Claytron :)
    - Fix colorcolum feature detection. Thanks to sandaya :)
    - MBE now ignores buffers with empty name. Thanks to Folke
      for the pull :)
    - Fix incompatibility with tildes in filenames. Thanks to
      future for the pull :)

6.4.3
    - Fix MBE losing highlighting when a buffer is closed.
      Thanks to Markus Koller for the pull request!
    - Disable spellcheck on MBE buffer.
    - Don't use colorcolumn setting on MBE buffer. Thanks to 
      grassofhust for the pull requests for this and the
      previous issue!

6.4.2
    - Moving current build out of beta. Getting ready for a
      re-write!

6.4.1b5
    - Allow users to turn off Buffer number display on exporer
      tabs courtesy of jmatraszek.
    - Allow users to turn off duplicate buffer name checking
      to speed up MBE buffer switching. We are working on
      optimizing this feature so that it is usable even with
      many buffers open.
    - Set Shellslash fix for Windows users so that duplicate
      buffer name checking works properly.
    - Re-enable synatx highlighitng after cycling the buffer
      courtesy of Sontek.
    - Fix erratic :q behavior when MBE is the last buffer
      courtesy of Moopet.

6.4.1b4
    - Finally figured out how to turn off parentheses
      matching for the MBE buffer, which solves a couple of
      annoying graphical glitches. Thanks to Thomas Egreger
      for the patch!
    - Added a temporary fix for the issues with MBE and
      FuzzyFinder thanks to toupeira.

6.4.1b2
    - Fixed Dupe File Name checking function to prevent some
      errors and actually work properly!

6.4.1b1
    - Added handler function to only update MBE on changes.

6.4.0
    - Added Emacs-like 'uniquify' feature where MBE will
      show a parent directory when there are 2 buffers with
      the same filename. Example: There are 2 buffers, one
      is /ProjectA/Application/CSS/style.css and
      /ProjectB/Applications/CSS/style.css. Originally, MBE
      would just display 'style.css' for both buffers. Now,
      MBE crawls up the directory tree to find the first
      differentiating parent directory for both buffers, so
      MBE will show 'ProjectA/style.css' and
      'ProjectB/style.css' for each buffer name.
    - Now setting winfixheight and winfixwidth for the MBE
      buffer so that it does not get resized automatically
      by window resizing commands such as 'CTRL W='.

6.3.7
    - MBE now uses it's own status line format to reduce the
      amount of visual clutter. This can be customized.

6.3.6
    - MBE now updates current buffer's status on buffer save
      and when a buffer is modified. Patched by Federico
      Holgado (fholgado at gmail dot com).

6.3.5
    - Added highlighting for currently active buffer.
      Patched by Federico Holgado (fholgado at gmail dot
      com).

6.3.4
    - Now returns to augroup NONE after setting augroup
      commands. Big thanks to Maciej Laszcz for the bug
      report!

6.3.3
    - Added additional keybindings. In addition to <TAB> and
      <S-TAB>, l and h can now be used. In addition to <CR>,
      and e can now be used.
    - You can open the selected buffer in a new split window 
      by pressing s while in the minibufexplorer window.
    - You can open the selected buffer in a new vertically
      split window while pressing v while in the
      minibufexplorer window. Patched by Oliver Uvman.

6.3.2
    - For some reason there was still a call to StopExplorer
      with 2 params. Very old bug. I know I fixed before, 
      any way many thanks to Jason Mills for reporting this!

6.3.1
    - Include folds in source so that it's easier to 
      navigate.
    - Added g:miniBufExplForceSyntaxEnable setting for folks
      that want a :syntax enable to be called when we enter 
      buffers. This can resolve issues caused by a vim bug
      where buffers show up without highlighting when another 
      buffer has been closed, quit, wiped or deleted.

6.3.0
    - Added an option to allow single click (rather than
      the default double click) to select buffers in the
      MBE window. This feature was requested by AW Law
      and was inspired by taglist.vim. Note that you will 
      need the latest version of taglist.vim if you want to 
      use MBE and taglist both with singleclick turned on.
      Also thanks to AW Law for pointing out that you can
      make an Explorer not be listed in a standard :ls.
    - Added the ability to have your tabs show up in a
      vertical window rather than the standard horizontal
      one. Just let g:miniBufExplVSplit = <width> in your
      .vimrc and your will get this functionality.
    - If you use the vertical explorer and you want it to
      autosize then let g:miniBufExplMaxSize = <max width>
      in your .vimrc. You may use the MinSize letting in
      addition to the MaxLetting if you don't want a super
      thin window.
    - g:miniBufExplMaxHeight was renamed g:miniBufExplMaxSize
      g:miniBufExplMinHeight was renamed g:miniBufExplMinSize
      the old settings are backwards compatible if you don't
      use the new settings, but they are depreciated.

6.2.8
    - Add an option to stop MBE from targeting non-modifiable
      buffers when switching buffers. Thanks to AW Law for
      the inspiration for this. This may not work if a user
      has lots of explorer/help windows open.

6.2.7
    - Very minor bug fix for people who want to set
      loaded_minibufexplorer in their .vimrc in order to
      stop MBE from loading. 99.99% of users do not need
      this update.

6.2.6
    - Moved history to end of source file
    - Updated highlighting documentation
    - Created global commands MBEbn and MBEbp that can be 
      used in mappings if folks want to cycle buffers while 
      skipping non-eligible buffers.

6.2.5
    - Added <Leader>mbt key mapping which will toggle
      the MBE window. I map this to F3 in my .vimrc
      with "map <F3> :TMiniBufExplorer<CR>" which 
      means I can easily close the MBE window when I'm 
      not using it and get it back when I want it.
    - Changed default debug mode to 3 (write to global
      g:miniBufExplorerDebugOutput)
    - Made a pass through the documentation to clarify 
      serveral issues and provide more complete docs
      for mappings and commands.

6.2.4
    - Because of the autocommand switch (see 6.2.0) it 
      was possible to remove the restriction on the
      :set hidden option. It is now possible to use
      this option with MBE.

6.2.3
    - Added miniBufExplTabWrap option. It is turned 
      off by default. When turned on spaces are added
      between tabs and gq} is issued to perform line
      formatting. This won't work very well if filenames
      contain spaces. It would be pretty easy to write
      my own formatter, but I'm too lazy, so if someone
      really needs that feature I'll add it :)

6.2.2
    - Changed the way the g:miniBufExplorerMoreThanOne
      global is handled. You can set this to the number
      of eligible buffers you want to be loaded before
      the MBE window is loaded. Setting it to 0 causes
      the MBE window to be opened even if there are no
      buffers. Setting it to 4 causes the window to stay
      closed until the 4th eligible buffer is loaded.
    - Added a MinHeight option. This is nice if you want
      the MBE window to always take the same amount of
      space. For example set MaxSize and MinSize to 2
      and set MoreThanOne to 0 and you will always have
      a 2 row (plus the ruler :) MBE window.
      NOTE: in 6.3.0 we started using MinSize instead of
      Minheight. This will still work if MinSize is not
      specified, but it is depreciated. Use MinSize instead.
    - I now setlocal foldcolumn=0 and nonumber in the MBE 
      window. This is for those of you that like to have
      these options turned on locally. I'm assuming noone
      outthere wants foldcolumns and line numbers in the
      MBE window? :)
    - Fixed a bug where an empty MBE window was taking half
      of the screen (partly why the MinHeight option was 
      added.)

6.2.1
    - If MBE is the only window (because of :bd for example)
      and there are still eligible buffers then one of them
      will be displayed.
    - The <Leader>mbe mapping now highlights the buffer from
      the current window.
    - The delete ('d') binding in the MBE window now restors
      the cursor position, which can help if you want to 
      delete several buffers in a row that are not at the
      beginning of the buffer list.
    - Added a new key binding ('p') in the MBE window to 
      switch to the previous window (last edit window)

6.2.0
    - Major overhaul of autocommand and list updating code,
      we now have much better handling of :bd (which is the 
      most requested feature.) As well as resolving other
      issues where the buffer list would not be updated
      automatically. The old version tried to trap specific
      events, this one just updates frequently, but it keeps
      track and only changes the screen if there has been
      a change.
    - Added g:miniBufExplMaxHeight variable so you can keep
      the -MiniBufExplorer- window small when you have lots
      of buffers (or buffers with long names :)
      NOTE: in 6.3.0 we started using MaxSize instead of
      MaxHeight. This will still work if MaxSize is not
      specified, but it is depreciated. Use MaxSize instead.
    - Improvement to internal syntax highlighting code
      I renamed the syntax group names. Anyone who has 
      figured out how to use them already shouldn't have
      any trouble with the new Nameing :)
    - Added debug mode 3 which writes to a global variable
      this is fast and doesn't mess with the buffer/window
      lists.

6.1.0
    - <Leader>mbc was failing because I was calling one of
      my own functions with the wrong number of args. :(
      Thanks to Gerry Patterson for finding this!
      This code is very stable (although it has some
      idiocyncracies.)

6.0.9
    - Double clicking tabs was overwriting the cliboard 
      register on MS Windows.  Thanks to Shoeb Bhinderwala 
      for reporting this issue.

6.0.8
    - Apparently some VIM builds are having a hard time with
      line continuation in scripts so the few that were here
      have been removed.
    - Generalized FindExplorer and FindCreateExplorer so
      that they can be used for the debug window. Renaming
      to FindWindow and FindCreateWindow.
    - Updated debugging code so that debug output is put into
      a buffer which can then be written to disk or emailed
      to me when someone is having a major issue. Can also
      write directly to a file (VERY SLOWLY) on UNIX or Win32
      (not 95 or 98 at the moment) or use VIM's echo function 
      to display the output to the screen.
    - Several people have had issues when the hidden option 
      is turned on. So I have put in several checks to make
      sure folks know this if they try to use MBE with this
      option set.

6.0.7
    - Handling BufDelete autocmd so that the UI updates 
      properly when using :bd (rather than going through 
      the MBE UI.)
    - The AutoUpdate code will now close the MBE window when 
      there is a single eligible buffer available.
      This has the usefull side effect of stopping the MBE
      window from blocking the VIM session open when you close 
      the last buffer.
    - Added functions, commands and maps to close & update
      the MBE window (<leader>mbc and <leader>mbu.)
    - Made MBE open/close state be sticky if set through
      StartExplorer(1) or StopExplorer(1), which are 
      called from the standard mappings. So if you close
      the mbe window with \mbc it won't be automatically 
      opened again unless you do a \mbe (or restart VIM).
    - Removed spaces between "tabs" (even more mini :)
    - Simplified MBE tab processing 

6.0.6
    - Fixed register overwrite bug found by S?bastien Pierre

6.0.5
    - Fixed an issue with window sizing when we run out of 
      buffers.  
    - Fixed some weird commenting bugs.  
    - Added more optional fancy window/buffer navigation:
    - You can turn on the capability to use control and the 
      arrow keys to move between windows.
    - You can turn on the ability to use <C-TAB> and 
      <C-S-TAB> to open the next and previous (respectively) 
      buffer in the current window.
    - You can turn on the ability to use <C-TAB> and 
      <C-S-TAB> to switch windows (forward and backwards 
      respectively.)

6.0.4
    - Added optional fancy window navigation: 
    - Holding down control and pressing a vim direction 
      [hjkl] will switch windows in the indicated direction.

6.0.3
    - Changed buffer name to -MiniBufExplorer- to resolve
      Issue in filename pattern matching on Windows.

6.0.2
    - 2 Changes requested by Suresh Govindachar:
    - Added SplitToEdge option and set it on by default
    - Added tab and shift-tab mappings in [MBE] window

6.0.1
    - Added MoreThanOne option and set it on by default
      MiniBufExplorer will not automatically open until
      more than one eligible buffers are opened. This
      reduces cluter when you are only working on a
      single file. 
      NOTE: See change log for 6.2.2 for more details about 
      this feature

6.0.0
    - Initial Release on November 20, 2001
